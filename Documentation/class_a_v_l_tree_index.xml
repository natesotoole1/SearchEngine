<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="class_a_v_l_tree_index" kind="class" language="C++" prot="public">
    <compoundname>AVLTreeIndex</compoundname>
    <includes refid="avltreeindex_8h" local="no">avltreeindex.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_a_v_l_tree_index_1a52ca65742f9d92bee094e7c038739f74" prot="private" static="no" mutable="no">
        <type><ref refid="struct_a_v_l___node" kindref="compound">AVL_Node</ref> *</type>
        <definition>AVL_Node* AVLTreeIndex::root</definition>
        <argsstring></argsstring>
        <name>root</name>
        <briefdescription>
<para>root of the tree </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/NateOToole/FinalProject/FinalProject/avltreeindex.h" line="53" column="1" bodyfile="/Users/NateOToole/FinalProject/FinalProject/avltreeindex.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_a_v_l_tree_index_1aba8dc551ea4963a8082991f52bb19c25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>AVLTreeIndex::AVLTreeIndex</definition>
        <argsstring>()</argsstring>
        <name>AVLTreeIndex</name>
        <briefdescription>
<para>constructor </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/NateOToole/FinalProject/FinalProject/avltreeindex.h" line="37" column="1" bodyfile="/Users/NateOToole/FinalProject/FinalProject/avltreeindex.cpp" bodystart="15" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="class_a_v_l_tree_index_1a0954e6e43e3742008bf18e71a8afc319" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AVLTreeIndex::insert</definition>
        <argsstring>(Term *)</argsstring>
        <name>insert</name>
        <param>
          <type><ref refid="class_term" kindref="compound">Term</ref> *</type>
          <defname>value</defname>
        </param>
        <briefdescription>
<para>public insert function that calls the private function </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/NateOToole/FinalProject/FinalProject/avltreeindex.h" line="38" column="1" bodyfile="/Users/NateOToole/FinalProject/FinalProject/avltreeindex.cpp" bodystart="20" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="class_a_v_l_tree_index_1a580c720dab8aa7dd31ca4fc20718cd80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_a_v_l___node" kindref="compound">AVL_Node</ref> *</type>
        <definition>AVL_Node * AVLTreeIndex::balance</definition>
        <argsstring>(AVL_Node *&amp;)</argsstring>
        <name>balance</name>
        <param>
          <type><ref refid="struct_a_v_l___node" kindref="compound">AVL_Node</ref> *&amp;</type>
          <defname>temp</defname>
        </param>
        <briefdescription>
<para>figures out when to rotate child or not </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/NateOToole/FinalProject/FinalProject/avltreeindex.h" line="39" column="1" bodyfile="/Users/NateOToole/FinalProject/FinalProject/avltreeindex.cpp" bodystart="25" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="class_a_v_l_tree_index_1abb5a43355e33d3af6ab29b3a1fcfd93d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int AVLTreeIndex::height</definition>
        <argsstring>(AVL_Node *&amp;)</argsstring>
        <name>height</name>
        <param>
          <type><ref refid="struct_a_v_l___node" kindref="compound">AVL_Node</ref> *&amp;</type>
          <defname>temp</defname>
        </param>
        <briefdescription>
<para>returns the height of the tree </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/NateOToole/FinalProject/FinalProject/avltreeindex.h" line="40" column="1" bodyfile="/Users/NateOToole/FinalProject/FinalProject/avltreeindex.cpp" bodystart="54" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="class_a_v_l_tree_index_1a95127bb897068de9eb3a589d0abfac53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int AVLTreeIndex::diff</definition>
        <argsstring>(AVL_Node *&amp;)</argsstring>
        <name>diff</name>
        <param>
          <type><ref refid="struct_a_v_l___node" kindref="compound">AVL_Node</ref> *&amp;</type>
          <defname>temp</defname>
        </param>
        <briefdescription>
<para>returns the difference in height </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/NateOToole/FinalProject/FinalProject/avltreeindex.h" line="41" column="1" bodyfile="/Users/NateOToole/FinalProject/FinalProject/avltreeindex.cpp" bodystart="46" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="class_a_v_l_tree_index_1a66e4cf16a8a6a4d7a2d8f833eaf05ec4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int AVLTreeIndex::max</definition>
        <argsstring>(int, int)</argsstring>
        <name>max</name>
        <param>
          <type>int</type>
          <defname>value1</defname>
        </param>
        <param>
          <type>int</type>
          <defname>value2</defname>
        </param>
        <briefdescription>
<para>gets the max height </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/NateOToole/FinalProject/FinalProject/avltreeindex.h" line="42" column="1" bodyfile="/Users/NateOToole/FinalProject/FinalProject/avltreeindex.cpp" bodystart="66" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="class_a_v_l_tree_index_1a9eb44deb708707f01e819bb7d43ef9e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_a_v_l___node" kindref="compound">AVL_Node</ref> *</type>
        <definition>AVL_Node * AVLTreeIndex::rotateRightChild</definition>
        <argsstring>(AVL_Node *&amp;)</argsstring>
        <name>rotateRightChild</name>
        <param>
          <type><ref refid="struct_a_v_l___node" kindref="compound">AVL_Node</ref> *&amp;</type>
          <defname>parent</defname>
        </param>
        <briefdescription>
<para>rotate right child </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/NateOToole/FinalProject/FinalProject/avltreeindex.h" line="43" column="1" bodyfile="/Users/NateOToole/FinalProject/FinalProject/avltreeindex.cpp" bodystart="72" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="class_a_v_l_tree_index_1ad57215a76dda89d84d5aa1ad0025fdcb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_a_v_l___node" kindref="compound">AVL_Node</ref> *</type>
        <definition>AVL_Node * AVLTreeIndex::rotateLeftChild</definition>
        <argsstring>(AVL_Node *&amp;)</argsstring>
        <name>rotateLeftChild</name>
        <param>
          <type><ref refid="struct_a_v_l___node" kindref="compound">AVL_Node</ref> *&amp;</type>
          <defname>parent</defname>
        </param>
        <briefdescription>
<para>rotate left child </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/NateOToole/FinalProject/FinalProject/avltreeindex.h" line="44" column="1" bodyfile="/Users/NateOToole/FinalProject/FinalProject/avltreeindex.cpp" bodystart="81" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="class_a_v_l_tree_index_1a353c476f4b6a48af1ec014e15dd321b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_a_v_l___node" kindref="compound">AVL_Node</ref> *</type>
        <definition>AVL_Node * AVLTreeIndex::doubleLeftChild</definition>
        <argsstring>(AVL_Node *&amp;)</argsstring>
        <name>doubleLeftChild</name>
        <param>
          <type><ref refid="struct_a_v_l___node" kindref="compound">AVL_Node</ref> *&amp;</type>
          <defname>parent</defname>
        </param>
        <briefdescription>
<para>rotate left child than rotate right child </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/NateOToole/FinalProject/FinalProject/avltreeindex.h" line="45" column="1" bodyfile="/Users/NateOToole/FinalProject/FinalProject/avltreeindex.cpp" bodystart="90" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="class_a_v_l_tree_index_1aaeb1558d866649c461b3d3719d1a5fea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_a_v_l___node" kindref="compound">AVL_Node</ref> *</type>
        <definition>AVL_Node * AVLTreeIndex::doubleRightChild</definition>
        <argsstring>(AVL_Node *&amp;)</argsstring>
        <name>doubleRightChild</name>
        <param>
          <type><ref refid="struct_a_v_l___node" kindref="compound">AVL_Node</ref> *&amp;</type>
          <defname>parent</defname>
        </param>
        <briefdescription>
<para>rotate right child than rotate left child </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/NateOToole/FinalProject/FinalProject/avltreeindex.h" line="46" column="1" bodyfile="/Users/NateOToole/FinalProject/FinalProject/avltreeindex.cpp" bodystart="96" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="class_a_v_l_tree_index_1abd40888cc3d9b4f6b7cacca9b4d7f327" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_term" kindref="compound">Term</ref> *</type>
        <definition>Term * AVLTreeIndex::find</definition>
        <argsstring>(string)</argsstring>
        <name>find</name>
        <param>
          <type>string</type>
          <defname>word</defname>
        </param>
        <briefdescription>
<para>public find function that is called from the interface and than passes it to private function </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/NateOToole/FinalProject/FinalProject/avltreeindex.h" line="48" column="1" bodyfile="/Users/NateOToole/FinalProject/FinalProject/avltreeindex.cpp" bodystart="102" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="class_a_v_l_tree_index_1a43269725295571c3cd41075e7dfc1c24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AVLTreeIndex::createPersistence</definition>
        <argsstring>(int, ofstream &amp;)</argsstring>
        <name>createPersistence</name>
        <param>
          <type>int</type>
          <defname>level</defname>
        </param>
        <param>
          <type>ofstream &amp;</type>
          <defname>persistence</defname>
        </param>
        <briefdescription>
<para>public call to create persistence than calls the private function </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/NateOToole/FinalProject/FinalProject/avltreeindex.h" line="49" column="1" bodyfile="/Users/NateOToole/FinalProject/FinalProject/avltreeindex.cpp" bodystart="120" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="class_a_v_l_tree_index_1a5de8f71edf00da8fecbd365df562a18e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AVLTreeIndex::clearTree</definition>
        <argsstring>()</argsstring>
        <name>clearTree</name>
        <briefdescription>
<para>public call to clear index than calls the private function </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/NateOToole/FinalProject/FinalProject/avltreeindex.h" line="50" column="1" bodyfile="/Users/NateOToole/FinalProject/FinalProject/avltreeindex.cpp" bodystart="125" bodyend="127"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_a_v_l_tree_index_1a5891589c2c753ef4dbe902f35c9385c7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AVLTreeIndex::insert</definition>
        <argsstring>(AVL_Node *&amp;, Term *)</argsstring>
        <name>insert</name>
        <param>
          <type><ref refid="struct_a_v_l___node" kindref="compound">AVL_Node</ref> *&amp;</type>
          <defname>root</defname>
        </param>
        <param>
          <type><ref refid="class_term" kindref="compound">Term</ref> *</type>
          <defname>value</defname>
        </param>
        <briefdescription>
<para>inserts node if null than checks balance to see if it is needed to rotate </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/NateOToole/FinalProject/FinalProject/avltreeindex.h" line="54" column="1" bodyfile="/Users/NateOToole/FinalProject/FinalProject/avltreeindex.cpp" bodystart="132" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="class_a_v_l_tree_index_1a9e82ee4cbd75a1a21d4151d188c77d75" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AVLTreeIndex::createPersistence</definition>
        <argsstring>(AVL_Node *&amp;, int, ofstream &amp;)</argsstring>
        <name>createPersistence</name>
        <param>
          <type><ref refid="struct_a_v_l___node" kindref="compound">AVL_Node</ref> *&amp;</type>
          <defname>ptr</defname>
        </param>
        <param>
          <type>int</type>
          <defname>level</defname>
        </param>
        <param>
          <type>ofstream &amp;</type>
          <defname>persistence</defname>
        </param>
        <briefdescription>
<para>creates the persistence from each individual avl tree </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/NateOToole/FinalProject/FinalProject/avltreeindex.h" line="55" column="1" bodyfile="/Users/NateOToole/FinalProject/FinalProject/avltreeindex.cpp" bodystart="161" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="class_a_v_l_tree_index_1a070e14c282a51451f92805cc8b80b6fd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AVLTreeIndex::continue_search</definition>
        <argsstring>(AVL_Node *&amp;curr, string word)</argsstring>
        <name>continue_search</name>
        <param>
          <type><ref refid="struct_a_v_l___node" kindref="compound">AVL_Node</ref> *&amp;</type>
          <declname>curr</declname>
        </param>
        <param>
          <type>string</type>
          <declname>word</declname>
        </param>
        <briefdescription>
<para>finds word called by query </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/NateOToole/FinalProject/FinalProject/avltreeindex.h" line="56" column="1" bodyfile="/Users/NateOToole/FinalProject/FinalProject/avltreeindex.cpp" bodystart="173" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="class_a_v_l_tree_index_1a4e37d288ef8d47138f1ca31c5c5251c5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AVLTreeIndex::clearTree</definition>
        <argsstring>(AVL_Node *)</argsstring>
        <name>clearTree</name>
        <param>
          <type><ref refid="struct_a_v_l___node" kindref="compound">AVL_Node</ref> *</type>
          <defname>r</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/NateOToole/FinalProject/FinalProject/avltreeindex.h" line="57" column="1" bodyfile="/Users/NateOToole/FinalProject/FinalProject/avltreeindex.cpp" bodystart="188" bodyend="195"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="avltreeindex_8h" kindref="compound">AVLTreeIndex.h</ref> has AVL Trees public and private classes in them. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="13">
        <label>AVLTreeIndex</label>
        <link refid="class_a_v_l_tree_index"/>
        <childnode refid="14" relation="usage">
          <edgelabel>root</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>AVL_Node</label>
        <link refid="struct_a_v_l___node"/>
        <childnode refid="14" relation="usage">
          <edgelabel>right</edgelabel>
          <edgelabel>left</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="16">
        <label>string</label>
      </node>
      <node id="15">
        <label>Term</label>
        <link refid="class_term"/>
        <childnode refid="16" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>next</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/NateOToole/FinalProject/FinalProject/avltreeindex.h" line="35" column="1" bodyfile="/Users/NateOToole/FinalProject/FinalProject/avltreeindex.h" bodystart="34" bodyend="58"/>
    <listofallmembers>
      <member refid="class_a_v_l_tree_index_1aba8dc551ea4963a8082991f52bb19c25" prot="public" virt="non-virtual"><scope>AVLTreeIndex</scope><name>AVLTreeIndex</name></member>
      <member refid="class_a_v_l_tree_index_1a580c720dab8aa7dd31ca4fc20718cd80" prot="public" virt="non-virtual"><scope>AVLTreeIndex</scope><name>balance</name></member>
      <member refid="class_a_v_l_tree_index_1a5de8f71edf00da8fecbd365df562a18e" prot="public" virt="non-virtual"><scope>AVLTreeIndex</scope><name>clearTree</name></member>
      <member refid="class_a_v_l_tree_index_1a4e37d288ef8d47138f1ca31c5c5251c5" prot="private" virt="non-virtual"><scope>AVLTreeIndex</scope><name>clearTree</name></member>
      <member refid="class_a_v_l_tree_index_1a070e14c282a51451f92805cc8b80b6fd" prot="private" virt="non-virtual"><scope>AVLTreeIndex</scope><name>continue_search</name></member>
      <member refid="class_a_v_l_tree_index_1a43269725295571c3cd41075e7dfc1c24" prot="public" virt="non-virtual"><scope>AVLTreeIndex</scope><name>createPersistence</name></member>
      <member refid="class_a_v_l_tree_index_1a9e82ee4cbd75a1a21d4151d188c77d75" prot="private" virt="non-virtual"><scope>AVLTreeIndex</scope><name>createPersistence</name></member>
      <member refid="class_a_v_l_tree_index_1a95127bb897068de9eb3a589d0abfac53" prot="public" virt="non-virtual"><scope>AVLTreeIndex</scope><name>diff</name></member>
      <member refid="class_a_v_l_tree_index_1a353c476f4b6a48af1ec014e15dd321b5" prot="public" virt="non-virtual"><scope>AVLTreeIndex</scope><name>doubleLeftChild</name></member>
      <member refid="class_a_v_l_tree_index_1aaeb1558d866649c461b3d3719d1a5fea" prot="public" virt="non-virtual"><scope>AVLTreeIndex</scope><name>doubleRightChild</name></member>
      <member refid="class_a_v_l_tree_index_1abd40888cc3d9b4f6b7cacca9b4d7f327" prot="public" virt="non-virtual"><scope>AVLTreeIndex</scope><name>find</name></member>
      <member refid="class_a_v_l_tree_index_1abb5a43355e33d3af6ab29b3a1fcfd93d" prot="public" virt="non-virtual"><scope>AVLTreeIndex</scope><name>height</name></member>
      <member refid="class_a_v_l_tree_index_1a0954e6e43e3742008bf18e71a8afc319" prot="public" virt="non-virtual"><scope>AVLTreeIndex</scope><name>insert</name></member>
      <member refid="class_a_v_l_tree_index_1a5891589c2c753ef4dbe902f35c9385c7" prot="private" virt="non-virtual"><scope>AVLTreeIndex</scope><name>insert</name></member>
      <member refid="class_a_v_l_tree_index_1a66e4cf16a8a6a4d7a2d8f833eaf05ec4" prot="public" virt="non-virtual"><scope>AVLTreeIndex</scope><name>max</name></member>
      <member refid="class_a_v_l_tree_index_1a52ca65742f9d92bee094e7c038739f74" prot="private" virt="non-virtual"><scope>AVLTreeIndex</scope><name>root</name></member>
      <member refid="class_a_v_l_tree_index_1ad57215a76dda89d84d5aa1ad0025fdcb" prot="public" virt="non-virtual"><scope>AVLTreeIndex</scope><name>rotateLeftChild</name></member>
      <member refid="class_a_v_l_tree_index_1a9eb44deb708707f01e819bb7d43ef9e8" prot="public" virt="non-virtual"><scope>AVLTreeIndex</scope><name>rotateRightChild</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
