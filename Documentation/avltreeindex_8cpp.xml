<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="avltreeindex_8cpp" kind="file" language="C++">
    <compoundname>avltreeindex.cpp</compoundname>
    <includes refid="avltreeindex_8h" local="yes">AVLTreeIndex.h</includes>
    <incdepgraph>
      <node id="32">
        <label>term.h</label>
        <link refid="term_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>indexinterface.h</label>
        <link refid="indexinterface_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>functional</label>
      </node>
      <node id="30">
        <label>timer.h</label>
        <link refid="timer_8h"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>iterator</label>
      </node>
      <node id="18">
        <label>cassert</label>
      </node>
      <node id="15">
        <label>docparser.h</label>
        <link refid="docparser_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>stdexcept</label>
      </node>
      <node id="21">
        <label>rapidxml_print.hpp</label>
        <link refid="rapidxml__print_8hpp"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>string</label>
      </node>
      <node id="20">
        <label>exception</label>
      </node>
      <node id="3">
        <label>fstream</label>
      </node>
      <node id="22">
        <label>ostream</label>
      </node>
      <node id="16">
        <label>rapidxml.hpp</label>
        <link refid="rapidxml_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>pageinfo.h</label>
        <link refid="pageinfo_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>rapidxml_utils.hpp</label>
        <link refid="rapidxml__utils_8hpp"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>pthread.h</label>
      </node>
      <node id="5">
        <label>cstdio</label>
      </node>
      <node id="13">
        <label>vector</label>
      </node>
      <node id="19">
        <label>new</label>
      </node>
      <node id="33">
        <label>utility</label>
      </node>
      <node id="11">
        <label>sstream</label>
      </node>
      <node id="31">
        <label>time.h</label>
      </node>
      <node id="9">
        <label>math.h</label>
      </node>
      <node id="17">
        <label>cstdlib</label>
      </node>
      <node id="0">
        <label>avltreeindex.cpp</label>
        <link refid="avltreeindex.cpp"/>
        <childnode refid="1" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>cctype</label>
      </node>
      <node id="2">
        <label>iostream</label>
      </node>
      <node id="14">
        <label>unordered_map</label>
      </node>
      <node id="1">
        <label>AVLTreeIndex.h</label>
        <link refid="avltreeindex_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>chrono</label>
      </node>
      <node id="12">
        <label>thread</label>
      </node>
      <node id="7">
        <label>algorithm</label>
      </node>
      <node id="29">
        <label>porter2_stemmer.h</label>
        <link refid="porter2__stemmer_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>Search<sp/>Engine<sp/>Project</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>CSE<sp/>2341:<sp/>Data<sp/>Stuctures</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>05/03/2015</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Nate<sp/>O&apos;Toole</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>**/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>contributor<sp/>for<sp/>Avl<sp/>Tree</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*<sp/>http://www.sanfoundry.com/cpp-program-implement-avl-trees/</highlight></codeline>
<codeline lineno="9"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="avltreeindex_8h" kindref="compound">AVLTreeIndex.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><ref refid="class_a_v_l_tree_index_1aba8dc551ea4963a8082991f52bb19c25" kindref="member">AVLTreeIndex::AVLTreeIndex</ref>(){</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_a_v_l_tree_index_1a52ca65742f9d92bee094e7c038739f74" kindref="member">root</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="18"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//passes<sp/>term<sp/>and<sp/>than<sp/>root<sp/>to<sp/>private<sp/>insert()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_a_v_l_tree_index_1a0954e6e43e3742008bf18e71a8afc319" kindref="member">AVLTreeIndex::insert</ref>(<ref refid="class_term" kindref="compound">Term</ref>*<sp/>value){</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_a_v_l_tree_index_1a0954e6e43e3742008bf18e71a8afc319" kindref="member">insert</ref>(<ref refid="class_a_v_l_tree_index_1a52ca65742f9d92bee094e7c038739f74" kindref="member">root</ref>,<sp/>value);</highlight></codeline>
<codeline lineno="22"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Balancing<sp/>AVL<sp/>Tree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><ref refid="struct_a_v_l___node" kindref="compound">AVL_Node</ref>*<sp/><ref refid="class_a_v_l_tree_index_1a580c720dab8aa7dd31ca4fc20718cd80" kindref="member">AVLTreeIndex::balance</ref>(<ref refid="struct_a_v_l___node" kindref="compound">AVL_Node</ref>*&amp;<sp/>temp){</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bal_factor<sp/>=<sp/><ref refid="class_a_v_l_tree_index_1a95127bb897068de9eb3a589d0abfac53" kindref="member">diff</ref><sp/>(temp);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bal_factor<sp/>&gt;<sp/>1){</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_a_v_l_tree_index_1a95127bb897068de9eb3a589d0abfac53" kindref="member">diff</ref><sp/>(temp-&gt;<ref refid="struct_a_v_l___node_1a7a5a4e3c99ef2c11b20a6a60aee247a8" kindref="member">left</ref>)<sp/>&gt;<sp/>0){<sp/></highlight><highlight class="comment">//if<sp/>left<sp/>node<sp/>height<sp/>difference<sp/>is<sp/>greater<sp/>than<sp/>0<sp/>rotate<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/><ref refid="class_a_v_l_tree_index_1ad57215a76dda89d84d5aa1ad0025fdcb" kindref="member">rotateLeftChild</ref><sp/>(temp);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{<sp/></highlight><highlight class="comment">//else<sp/>rotate<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/><ref refid="class_a_v_l_tree_index_1a353c476f4b6a48af1ec014e15dd321b5" kindref="member">doubleLeftChild</ref><sp/>(temp);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bal_factor<sp/>&lt;<sp/>-1){</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_a_v_l_tree_index_1a95127bb897068de9eb3a589d0abfac53" kindref="member">diff</ref><sp/>(temp-&gt;<ref refid="struct_a_v_l___node_1af0d0c4d5eaf62a9141711d1a10e3ba11" kindref="member">right</ref>)<sp/>&gt;<sp/>0){<sp/></highlight><highlight class="comment">//if<sp/>right<sp/>node<sp/>height<sp/>difference<sp/>is<sp/>greater<sp/>than<sp/>0<sp/>rotate<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/><ref refid="class_a_v_l_tree_index_1aaeb1558d866649c461b3d3719d1a5fea" kindref="member">doubleRightChild</ref><sp/>(temp);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/><ref refid="class_a_v_l_tree_index_1a9eb44deb708707f01e819bb7d43ef9e8" kindref="member">rotateRightChild</ref><sp/>(temp);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>temp;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Height<sp/>Difference</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_a_v_l_tree_index_1a95127bb897068de9eb3a589d0abfac53" kindref="member">AVLTreeIndex::diff</ref>(<ref refid="struct_a_v_l___node" kindref="compound">AVL_Node</ref>*&amp;<sp/>temp){</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l_height<sp/>=<sp/><ref refid="class_a_v_l_tree_index_1abb5a43355e33d3af6ab29b3a1fcfd93d" kindref="member">height</ref><sp/>(temp-&gt;<ref refid="struct_a_v_l___node_1a7a5a4e3c99ef2c11b20a6a60aee247a8" kindref="member">left</ref>);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r_height<sp/>=<sp/><ref refid="class_a_v_l_tree_index_1abb5a43355e33d3af6ab29b3a1fcfd93d" kindref="member">height</ref><sp/>(temp-&gt;<ref refid="struct_a_v_l___node_1af0d0c4d5eaf62a9141711d1a10e3ba11" kindref="member">right</ref>);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b_factor=<sp/>l_height<sp/>-<sp/>r_height;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>b_factor;</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//returns<sp/>height</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_a_v_l_tree_index_1abb5a43355e33d3af6ab29b3a1fcfd93d" kindref="member">AVLTreeIndex::height</ref>(<ref refid="struct_a_v_l___node" kindref="compound">AVL_Node</ref>*&amp;<sp/>temp){</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(temp<sp/>!=<sp/>NULL){</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l_height<sp/>=<sp/><ref refid="class_a_v_l_tree_index_1abb5a43355e33d3af6ab29b3a1fcfd93d" kindref="member">height</ref><sp/>(temp-&gt;<ref refid="struct_a_v_l___node_1a7a5a4e3c99ef2c11b20a6a60aee247a8" kindref="member">left</ref>);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r_height<sp/>=<sp/><ref refid="class_a_v_l_tree_index_1abb5a43355e33d3af6ab29b3a1fcfd93d" kindref="member">height</ref><sp/>(temp-&gt;<ref refid="struct_a_v_l___node_1af0d0c4d5eaf62a9141711d1a10e3ba11" kindref="member">right</ref>);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_height<sp/>=<sp/><ref refid="class_a_v_l_tree_index_1a66e4cf16a8a6a4d7a2d8f833eaf05ec4" kindref="member">max</ref><sp/>(l_height,<sp/>r_height);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h<sp/>=<sp/>max_height<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>h;</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//returns<sp/>the<sp/>max<sp/>height</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_a_v_l_tree_index_1a66e4cf16a8a6a4d7a2d8f833eaf05ec4" kindref="member">AVLTreeIndex::max</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value2){</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((value1<sp/>&gt;<sp/>value2)<sp/>?<sp/>value1:value2);</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Right-<sp/>Right<sp/>Rotation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><ref refid="struct_a_v_l___node" kindref="compound">AVL_Node</ref>*<sp/><ref refid="class_a_v_l_tree_index_1a9eb44deb708707f01e819bb7d43ef9e8" kindref="member">AVLTreeIndex::rotateRightChild</ref>(<ref refid="struct_a_v_l___node" kindref="compound">AVL_Node</ref>*&amp;<sp/>parent){</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_a_v_l___node" kindref="compound">AVL_Node</ref><sp/>*temp;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>parent-&gt;<ref refid="struct_a_v_l___node_1af0d0c4d5eaf62a9141711d1a10e3ba11" kindref="member">right</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>parent-&gt;<ref refid="struct_a_v_l___node_1af0d0c4d5eaf62a9141711d1a10e3ba11" kindref="member">right</ref><sp/>=<sp/>temp-&gt;<ref refid="struct_a_v_l___node_1a7a5a4e3c99ef2c11b20a6a60aee247a8" kindref="member">left</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>temp-&gt;<ref refid="struct_a_v_l___node_1a7a5a4e3c99ef2c11b20a6a60aee247a8" kindref="member">left</ref><sp/>=<sp/>parent;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>temp;</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Left-<sp/>Left<sp/>Rotation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><ref refid="struct_a_v_l___node" kindref="compound">AVL_Node</ref>*<sp/><ref refid="class_a_v_l_tree_index_1ad57215a76dda89d84d5aa1ad0025fdcb" kindref="member">AVLTreeIndex::rotateLeftChild</ref>(<ref refid="struct_a_v_l___node" kindref="compound">AVL_Node</ref><sp/>*&amp;<sp/>parent){</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_a_v_l___node" kindref="compound">AVL_Node</ref><sp/>*temp;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>parent-&gt;<ref refid="struct_a_v_l___node_1a7a5a4e3c99ef2c11b20a6a60aee247a8" kindref="member">left</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>parent-&gt;<ref refid="struct_a_v_l___node_1a7a5a4e3c99ef2c11b20a6a60aee247a8" kindref="member">left</ref><sp/>=<sp/>temp-&gt;<ref refid="struct_a_v_l___node_1af0d0c4d5eaf62a9141711d1a10e3ba11" kindref="member">right</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>temp-&gt;<ref refid="struct_a_v_l___node_1af0d0c4d5eaf62a9141711d1a10e3ba11" kindref="member">right</ref><sp/>=<sp/>parent;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>temp;</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Left<sp/>-<sp/>Right<sp/>Rotation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><ref refid="struct_a_v_l___node" kindref="compound">AVL_Node</ref>*<sp/><ref refid="class_a_v_l_tree_index_1a353c476f4b6a48af1ec014e15dd321b5" kindref="member">AVLTreeIndex::doubleLeftChild</ref>(<ref refid="struct_a_v_l___node" kindref="compound">AVL_Node</ref><sp/>*&amp;parent){</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>parent-&gt;<ref refid="struct_a_v_l___node_1a7a5a4e3c99ef2c11b20a6a60aee247a8" kindref="member">left</ref><sp/>=<sp/><ref refid="class_a_v_l_tree_index_1a9eb44deb708707f01e819bb7d43ef9e8" kindref="member">rotateRightChild</ref>(parent-&gt;<ref refid="struct_a_v_l___node_1a7a5a4e3c99ef2c11b20a6a60aee247a8" kindref="member">left</ref>);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_a_v_l_tree_index_1ad57215a76dda89d84d5aa1ad0025fdcb" kindref="member">rotateLeftChild</ref><sp/>(parent);</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Right-<sp/>Left<sp/>Rotation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><ref refid="struct_a_v_l___node" kindref="compound">AVL_Node</ref>*<sp/><ref refid="class_a_v_l_tree_index_1aaeb1558d866649c461b3d3719d1a5fea" kindref="member">AVLTreeIndex::doubleRightChild</ref>(<ref refid="struct_a_v_l___node" kindref="compound">AVL_Node</ref><sp/>*&amp;parent){</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>parent-&gt;<ref refid="struct_a_v_l___node_1af0d0c4d5eaf62a9141711d1a10e3ba11" kindref="member">right</ref><sp/>=<sp/><ref refid="class_a_v_l_tree_index_1ad57215a76dda89d84d5aa1ad0025fdcb" kindref="member">rotateLeftChild</ref><sp/>(parent-&gt;<ref refid="struct_a_v_l___node_1af0d0c4d5eaf62a9141711d1a10e3ba11" kindref="member">right</ref>);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_a_v_l_tree_index_1a9eb44deb708707f01e819bb7d43ef9e8" kindref="member">rotateRightChild</ref><sp/>(parent);</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">//searches<sp/>word<sp/>and<sp/>returns<sp/>the<sp/>term<sp/>when<sp/>word<sp/>is<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><ref refid="class_term" kindref="compound">Term</ref>*<sp/><ref refid="class_a_v_l_tree_index_1abd40888cc3d9b4f6b7cacca9b4d7f327" kindref="member">AVLTreeIndex::find</ref><sp/>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>word){</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_a_v_l___node" kindref="compound">AVL_Node</ref>*<sp/>foundNode<sp/>=<sp/><ref refid="class_a_v_l_tree_index_1a52ca65742f9d92bee094e7c038739f74" kindref="member">root</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>word2<sp/>=<sp/><ref refid="class_a_v_l_tree_index_1a52ca65742f9d92bee094e7c038739f74" kindref="member">root</ref>-&gt;<ref refid="struct_a_v_l___node_1a6a9062cc45fa099a2c68763e1d52b894" kindref="member">data</ref>-&gt;<ref refid="class_term_1aba11aacf87334a460aae98148699dc46" kindref="member">get_name</ref>();</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((word<sp/>&lt;<sp/>word2)<sp/>&amp;&amp;<sp/>(<ref refid="class_a_v_l_tree_index_1a52ca65742f9d92bee094e7c038739f74" kindref="member">root</ref>-&gt;<ref refid="struct_a_v_l___node_1a7a5a4e3c99ef2c11b20a6a60aee247a8" kindref="member">left</ref>)){</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>foundNode<sp/>=<sp/>foundNode-&gt;<ref refid="struct_a_v_l___node_1a7a5a4e3c99ef2c11b20a6a60aee247a8" kindref="member">left</ref>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_v_l_tree_index_1a070e14c282a51451f92805cc8b80b6fd" kindref="member">continue_search</ref>(foundNode,<sp/>word);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((word<sp/>&gt;<sp/>word2)<sp/>&amp;&amp;<sp/>(<ref refid="class_a_v_l_tree_index_1a52ca65742f9d92bee094e7c038739f74" kindref="member">root</ref>-&gt;<ref refid="struct_a_v_l___node_1af0d0c4d5eaf62a9141711d1a10e3ba11" kindref="member">right</ref>)){</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>foundNode<sp/>=<sp/>foundNode-&gt;<ref refid="struct_a_v_l___node_1af0d0c4d5eaf62a9141711d1a10e3ba11" kindref="member">right</ref>;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_v_l_tree_index_1a070e14c282a51451f92805cc8b80b6fd" kindref="member">continue_search</ref>(foundNode,<sp/>word);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(word<sp/>==<sp/>word2){</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>foundNode-&gt;<ref refid="struct_a_v_l___node_1a6a9062cc45fa099a2c68763e1d52b894" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(foundNode)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>foundNode-&gt;<ref refid="struct_a_v_l___node_1a6a9062cc45fa099a2c68763e1d52b894" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">//passes<sp/>the<sp/>root,<sp/>level<sp/>and<sp/>persistence<sp/>to<sp/>the<sp/>private<sp/>function<sp/>createPersistence()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_a_v_l_tree_index_1a43269725295571c3cd41075e7dfc1c24" kindref="member">AVLTreeIndex::createPersistence</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level,<sp/>ofstream<sp/>&amp;persistence)</highlight></codeline>
<codeline lineno="121"><highlight class="normal">{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_a_v_l_tree_index_1a43269725295571c3cd41075e7dfc1c24" kindref="member">createPersistence</ref>(<ref refid="class_a_v_l_tree_index_1a52ca65742f9d92bee094e7c038739f74" kindref="member">root</ref>,<sp/>level,<sp/>persistence);</highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_a_v_l_tree_index_1a5de8f71edf00da8fecbd365df562a18e" kindref="member">AVLTreeIndex::clearTree</ref>(){</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_a_v_l_tree_index_1a5de8f71edf00da8fecbd365df562a18e" kindref="member">clearTree</ref>(<ref refid="class_a_v_l_tree_index_1a52ca65742f9d92bee094e7c038739f74" kindref="member">root</ref>);</highlight></codeline>
<codeline lineno="127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">//private<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="comment">//continues<sp/>the<sp/>insert<sp/>of<sp/>the<sp/>avl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_a_v_l_tree_index_1a0954e6e43e3742008bf18e71a8afc319" kindref="member">AVLTreeIndex::insert</ref>(<ref refid="struct_a_v_l___node" kindref="compound">AVL_Node</ref>*&amp;<sp/>root,<sp/><ref refid="class_term" kindref="compound">Term</ref>*<sp/>value)</highlight></codeline>
<codeline lineno="133"><highlight class="normal">{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>root<sp/>=<sp/>null<sp/>than<sp/>it<sp/>will<sp/>create<sp/>the<sp/>new<sp/>alphabetical<sp/>avl<sp/>tree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(root<sp/>==<sp/>NULL){</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>root<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_l___node" kindref="compound">AVL_Node</ref>;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>root-&gt;<ref refid="struct_a_v_l___node_1a7a5a4e3c99ef2c11b20a6a60aee247a8" kindref="member">left</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>root-&gt;<ref refid="struct_a_v_l___node_1af0d0c4d5eaf62a9141711d1a10e3ba11" kindref="member">right</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>root-&gt;<ref refid="struct_a_v_l___node_1a6a9062cc45fa099a2c68763e1d52b894" kindref="member">data</ref><sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>the<sp/>roots<sp/>word<sp/>is<sp/>greater<sp/>than<sp/>the<sp/>word<sp/>in<sp/>value<sp/>insert<sp/>left<sp/>and<sp/>than<sp/>balance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value-&gt;<ref refid="class_term_1aba11aacf87334a460aae98148699dc46" kindref="member">get_name</ref>()<sp/>&lt;<sp/>root-&gt;<ref refid="struct_a_v_l___node_1a6a9062cc45fa099a2c68763e1d52b894" kindref="member">data</ref>-&gt;<ref refid="class_term_1aba11aacf87334a460aae98148699dc46" kindref="member">get_name</ref>()){</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_v_l_tree_index_1a0954e6e43e3742008bf18e71a8afc319" kindref="member">insert</ref>(root-&gt;<ref refid="struct_a_v_l___node_1a7a5a4e3c99ef2c11b20a6a60aee247a8" kindref="member">left</ref>,<sp/>value);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>root<sp/>=<sp/><ref refid="class_a_v_l_tree_index_1a580c720dab8aa7dd31ca4fc20718cd80" kindref="member">balance</ref>(root);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>the<sp/>roots<sp/>word<sp/>is<sp/>less<sp/>than<sp/>the<sp/>word<sp/>in<sp/>value<sp/>insert<sp/>right<sp/>and<sp/>than<sp/>balance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value-&gt;<ref refid="class_term_1aba11aacf87334a460aae98148699dc46" kindref="member">get_name</ref>()<sp/>&gt;<sp/>root-&gt;<ref refid="struct_a_v_l___node_1a6a9062cc45fa099a2c68763e1d52b894" kindref="member">data</ref>-&gt;<ref refid="class_term_1aba11aacf87334a460aae98148699dc46" kindref="member">get_name</ref>()){</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_v_l_tree_index_1a0954e6e43e3742008bf18e71a8afc319" kindref="member">insert</ref>(root-&gt;<ref refid="struct_a_v_l___node_1af0d0c4d5eaf62a9141711d1a10e3ba11" kindref="member">right</ref>,<sp/>value);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>root<sp/>=<sp/><ref refid="class_a_v_l_tree_index_1a580c720dab8aa7dd31ca4fc20718cd80" kindref="member">balance</ref>(root);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>the<sp/>roots<sp/>word<sp/>is<sp/>equal<sp/>to<sp/>the<sp/>word<sp/>in<sp/>value<sp/>than<sp/>it<sp/>will<sp/>just<sp/>return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(value-&gt;<ref refid="class_term_1aba11aacf87334a460aae98148699dc46" kindref="member">get_name</ref>()<sp/>==<sp/>root-&gt;<ref refid="struct_a_v_l___node_1a6a9062cc45fa099a2c68763e1d52b894" kindref="member">data</ref>-&gt;<ref refid="class_term_1aba11aacf87334a460aae98148699dc46" kindref="member">get_name</ref>()<sp/>==<sp/>0<sp/>){</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//return<sp/>root;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="comment">//<sp/>creates<sp/>Persistence<sp/>from<sp/>the<sp/>AVL<sp/>Tree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_a_v_l_tree_index_1a43269725295571c3cd41075e7dfc1c24" kindref="member">AVLTreeIndex::createPersistence</ref>(<ref refid="struct_a_v_l___node" kindref="compound">AVL_Node</ref>*&amp;<sp/>ptr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level,<sp/>ofstream<sp/>&amp;persistence)</highlight></codeline>
<codeline lineno="162"><highlight class="normal">{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ptr!=NULL)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_v_l_tree_index_1a43269725295571c3cd41075e7dfc1c24" kindref="member">createPersistence</ref>(ptr-&gt;<ref refid="struct_a_v_l___node_1a7a5a4e3c99ef2c11b20a6a60aee247a8" kindref="member">left</ref>,<sp/>level<sp/>+<sp/>1,<sp/>persistence);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="struct_a_v_l___node_1a6a9062cc45fa099a2c68763e1d52b894" kindref="member">data</ref>-&gt;<ref refid="class_term_1ae0e0bd5c7411fa03aeb2c92464dd921b" kindref="member">write_term</ref>(persistence);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_v_l_tree_index_1a43269725295571c3cd41075e7dfc1c24" kindref="member">createPersistence</ref>(ptr-&gt;<ref refid="struct_a_v_l___node_1af0d0c4d5eaf62a9141711d1a10e3ba11" kindref="member">right</ref>,<sp/>level<sp/>+<sp/>1,<sp/>persistence);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal">}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="comment">//continues<sp/>search<sp/>for<sp/>word</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_a_v_l_tree_index_1a070e14c282a51451f92805cc8b80b6fd" kindref="member">AVLTreeIndex::continue_search</ref>(<ref refid="struct_a_v_l___node" kindref="compound">AVL_Node</ref>*&amp;<sp/>curr,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>word){</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>word2<sp/>=<sp/>curr-&gt;<ref refid="struct_a_v_l___node_1a6a9062cc45fa099a2c68763e1d52b894" kindref="member">data</ref>-&gt;<ref refid="class_term_1aba11aacf87334a460aae98148699dc46" kindref="member">get_name</ref>();</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((word<sp/>&lt;<sp/>word2)<sp/>&amp;&amp;<sp/>(curr-&gt;<ref refid="struct_a_v_l___node_1a7a5a4e3c99ef2c11b20a6a60aee247a8" kindref="member">left</ref>)){</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curr<sp/>=<sp/>curr-&gt;<ref refid="struct_a_v_l___node_1a7a5a4e3c99ef2c11b20a6a60aee247a8" kindref="member">left</ref>;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_v_l_tree_index_1a070e14c282a51451f92805cc8b80b6fd" kindref="member">continue_search</ref>(curr,<sp/>word);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((word<sp/>&gt;<sp/>word2)<sp/>&amp;&amp;<sp/>(curr-&gt;<ref refid="struct_a_v_l___node_1af0d0c4d5eaf62a9141711d1a10e3ba11" kindref="member">right</ref>)){</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curr<sp/>=<sp/>curr-&gt;<ref refid="struct_a_v_l___node_1af0d0c4d5eaf62a9141711d1a10e3ba11" kindref="member">right</ref>;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_v_l_tree_index_1a070e14c282a51451f92805cc8b80b6fd" kindref="member">continue_search</ref>(curr,<sp/>word);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(word<sp/>==<sp/>word2){</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>curr<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="comment">//clears<sp/>tree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_a_v_l_tree_index_1a5de8f71edf00da8fecbd365df562a18e" kindref="member">AVLTreeIndex::clearTree</ref>(<ref refid="struct_a_v_l___node" kindref="compound">AVL_Node</ref>*<sp/>r){</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r<sp/>!=<sp/>NULL){</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_v_l_tree_index_1a5de8f71edf00da8fecbd365df562a18e" kindref="member">clearTree</ref>(r-&gt;<ref refid="struct_a_v_l___node_1a7a5a4e3c99ef2c11b20a6a60aee247a8" kindref="member">left</ref>);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_v_l_tree_index_1a5de8f71edf00da8fecbd365df562a18e" kindref="member">clearTree</ref>(r-&gt;<ref refid="struct_a_v_l___node_1af0d0c4d5eaf62a9141711d1a10e3ba11" kindref="member">right</ref>);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="195"><highlight class="normal">}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/NateOToole/FinalProject/FinalProject/avltreeindex.cpp"/>
  </compounddef>
</doxygen>
